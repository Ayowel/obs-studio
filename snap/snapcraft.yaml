name: obs-studio
adopt-info: obs
base: core22
grade: stable
confinement: strict
license: GPL-2.0
architectures:
  - build-on: amd64
compression: lzo

plugs:
  # Support for common GTK themes
  # https://forum.snapcraft.io/t/how-to-use-the-system-gtk-theme-via-the-gtk-common-themes-snap/6235
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes

layout:
  /usr/lib/obs-plugins:
    symlink: $SNAP/usr/lib/obs-plugins
  /usr/lib/obs-scripting:
    symlink: $SNAP/usr/lib/obs-scripting
  /usr/local/lib:
    symlink: $SNAP/usr/local/lib
  /usr/lib/$CRAFT_ARCH_TRIPLET/alsa-lib:
    symlink: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/alsa-lib
  /usr/lib/$CRAFT_ARCH_TRIPLET/libgphoto2:
    symlink: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/libgphoto2
  /usr/lib/$CRAFT_ARCH_TRIPLET/libgphoto2_port:
    symlink: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/libgphoto2_port
  /usr/lib/$CRAFT_ARCH_TRIPLET/libvulkan_intel.so:
    symlink: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/libvulkan_intel.so
  /usr/lib/$CRAFT_ARCH_TRIPLET/libvulkan_radeon.so:
    symlink: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/libvulkan_radeon.so
  /usr/share/alsa:
    symlink: $SNAP/usr/share/alsa
  /usr/share/libdrm/amdgpu.ids:
    symlink: $SNAP/usr/share/libdrm/amdgpu.ids
  /usr/share/obs:
    symlink: $SNAP/usr/share/obs
  /usr/share/X11:
    symlink: $SNAP/usr/share/X11

apps:
  obs-studio:
    command: usr/bin/obs --multi
    command-chain:
      #- snap/command-chain/desktop-launch
      - bin/obs-wrapper
    common-id: com.obsproject.Studio
    desktop: usr/share/applications/com.obsproject.Studio.desktop
    extensions:
      - gnome
    environment:
      #LD_LIBRARY_PATH: $SNAP/opt/qt515/lib
      PIPEWIRE_CONFIG_NAME: $SNAP/usr/share/pipewire/pipewire.conf
      PIPEWIRE_MODULE_DIR: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/pipewire-0.3
      PYTHONPATH: $PYTHONPATH:$SNAP/usr/lib/python3/dist-packages
      #QTDIR: $SNAP/opt/qt515
      #QT_PLUGIN_PATH: $SNAP/opt/qt515/plugins:$QT_PLUGIN_PATH
      SNAP_DESKTOP_RUNTIME: $SNAP
      SPA_PLUGIN_DIR: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/spa-0.2
    plugs: &plugs
      - alsa
      - audio-playback
      - audio-record
      - avahi-control
      - browser-support
      - camera
      - desktop
      - desktop-legacy
      - gsettings
      - home
      - hardware-observe
      - jack1
      - joystick
      - kernel-module-observe
      - network
      - network-bind
      - opengl
      - password-manager-service
      - process-control
      - pulseaudio
      - raw-usb
      - removable-media
      - screen-inhibit-control
      - screencast-legacy
      - system-observe
      - unity7
      - upower-observe
      - wayland
      - x11
  eglinfo:
    command: usr/bin/eglinfo
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  glxinfo:
    command: usr/bin/glxinfo
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  ffmpeg:
    command: usr/bin/ffmpeg
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  ffplay:
    command: usr/bin/ffplay
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  ffprobe:
    command: usr/bin/ffprobe
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  srt-ffplay:
    command: usr/bin/srt-ffplay
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  srt-file-transmit:
    command: usr/bin/srt-file-transmit
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  srt-live-transmit:
    command: usr/bin/srt-live-transmit
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  srt-tunnel:
    command: usr/bin/srt-tunnel
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  vainfo:
    command: usr/bin/vainfo
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  vdpauinfo:
    command: usr/bin/vdpauinfo
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  vulkaninfo:
    command: usr/bin/vulkaninfo
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs

parts:
  #desktop-launch:
  #  plugin: make
  #  source: /snap/snapcraft/8187/share/snapcraft/extensions/desktop
  #  #source: $CRAFT_EXTENSIONS_DIR/desktop
  #  source-subdir: kde-neon
  #  make-parameters:
  #    - PLATFORM_PLUG="gtk-3-themes"
  #  stage-packages:
  #    - libglib2.0-0
  #    - libgdk-pixbuf2.0-0
  #    - gsettings-desktop-schemas
  #    - gtk-update-icon-cache
  #    - shared-mime-info

  # FIXME: Not required anymore ?
  nv-codec-headers:
    plugin: make
    source: https://github.com/FFmpeg/nv-codec-headers.git
    source-branch: 'sdk/10.0'
    make-parameters:
      - PREFIX=/usr
    build-packages:
      - pkg-config
    prime:
      - -usr/include
      - -usr/lib/pkgconfig

  srt:
    plugin: cmake
    source: https://github.com/Haivision/srt.git
    source-tag: 'v1.5.1'
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DENABLE_LOGGING=OFF
      - -DENABLE_STATIC=OFF
    build-packages:
      - libssl-dev
    prime:
      - -usr/include
      - -usr/lib/$CRAFT_ARCH_TRIPLET/pkgconfig

  #x264:
  #  plugin: autotools
  #  source: https://code.videolan.org/videolan/x264.git
  #  source-branch: 'stable'
  #  autotools-configure-parameters:
  #    - --prefix=/usr
  #    - --disable-cli
  #    - --enable-shared
  #    - --enable-strip
  #  build-packages:
  #    - libva-dev
  #    - nasm
  #  prime:
  #    - usr/lib
  #    - -usr/lib/pkgconfig

  #aom:
  #  plugin: cmake
  #  source: https://aomedia.googlesource.com/aom.git
  #  source-tag: 'v3.5.0'
  #  cmake-parameters:
  #    - -DCMAKE_INSTALL_PREFIX=/usr
  #    - -DCMAKE_BUILD_TYPE=Release
  #    - -DCMAKE_C_FLAGS_RELEASE=-s
  #    - -DCMAKE_CXX_FLAGS_RELEASE=-s
  #    - -DCONFIG_MULTITHREAD=1
  #    - -DBUILD_SHARED_LIBS=1
  #    - -DENABLE_DOCS=0
  #    - -DENABLE_EXAMPLES=0
  #    - -DENABLE_TESTS=0
  #  build-packages:
  #    - ninja-build
  #    - yasm
  #  prime:
  #    - -usr/include
  #    - -usr/lib/$CRAFT_ARCH_TRIPLET/libaom.a
  #    - -usr/lib/$CRAFT_ARCH_TRIPLET/pkgconfig

  #dav1d:
  #  plugin: meson
  #  source: https://code.videolan.org/videolan/dav1d.git
  #  source-tag: '0.9.2'
  #  meson-parameters:
  #    - --prefix=/usr
  #    - --buildtype=release
  #    - --strip
  #    - -Denable_tools=false
  #    - -Denable_tests=false
  #  build-packages: [meson, ninja-build]
  #  prime:
  #    - -usr/include
  #    - -usr/lib/$CRAFT_ARCH_TRIPLET/pkgconfig

  # NOTE! StreamFX requires FFmpeg 4.3
  ffmpeg:
    plugin: autotools
    after:
      #- aom
      #- dav1d
      - nv-codec-headers
      - srt
      #- x264
    source: https://github.com/FFmpeg/FFmpeg.git
    source-branch: release/4.3
    build-packages:
      - libaom-dev
      - libass-dev
      - libbz2-dev
      - libdav1d-dev
      - libdrm-dev
      - libfdk-aac-dev
      - liblzma-dev
      - libmp3lame-dev
      - libomxil-bellagio-dev
      - libopenal-dev
      - libopenjp2-7-dev
      - libopus-dev
      - libpulse-dev
      - librsvg2-dev
      - libsctp-dev
      - libsdl2-dev
      - libspeex-dev
      - libssl-dev
      - libtheora-dev
      - libtwolame-dev
      - libva-dev
      - libv4l-dev
      - libvdpau-dev
      - libvorbis-dev
      - libvpx-dev
      - libwebp-dev
      - libx264-dev
      - libx265-dev
      - libxcb-shape0-dev
      - libxcb-shm0-dev
      - libxcb-xfixes0-dev
      - libxml2-dev
      - libxv-dev
      - libxvidcore-dev
      - ocl-icd-opencl-dev
      - opencl-headers
      - pkg-config
      - yasm
    stage-packages:
      - libaom3
      - libass9
      - libdav1d5
      - libdrm2
      - libfdk-aac2
      - libmp3lame0
      - libopenal1
      - libopenjp2-7
      - libopus0
      - libpulse0
      - librsvg2-2
      - libsdl2-2.0-0
      - libspeex1
      - libssl3
      - libtheora0
      - libtwolame0
      - libv4l-0
      - libv4l2rds0
      - libva-drm2
      - libva-glx2
      - libva-wayland2
      - libvdpau-va-gl1
      - libvorbis0a
      - libvorbisenc2
      - libvpx7
      - libwebp7
      - libx265-199
      - libwebpmux3
      - libx11-6
      - libx264-163
      - libxau6
      - libxcb-shape0
      - libxcb-shm0
      - libxcb-xfixes0
      - libxcb1
      - libxdmcp6
      - libxext6
      - libxml2
      - libxv1
      - libxvidcore4
      - mesa-vdpau-drivers
      - ocl-icd-libopencl1
      - on amd64:
        - i965-va-driver
        - mesa-va-drivers
      - on i386:
        - i965-va-driver
        - mesa-va-drivers
    autotools-configure-parameters:
      - --prefix=/usr
      - --enable-libaom
      - --disable-avisynth
      - --disable-crystalhd
      - --enable-libdav1d
      - --disable-debug
      - --disable-doc
      - --disable-static
      - --enable-cuda
      - --enable-cuvid
      - --enable-gpl
      - --enable-libass
      - --enable-libdrm
      - --enable-libfdk-aac
      - --enable-libfontconfig
      - --enable-libfreetype
      - --enable-libmp3lame
      - --enable-libopenjpeg
      - --enable-libopus
      - --enable-libpulse
      - --enable-librsvg
      - --enable-libspeex
      - --enable-libsrt
      - --enable-libtheora
      - --enable-libtwolame
      - --enable-libv4l2
      - --enable-libvorbis
      - --enable-libvpx
      - --enable-libwebp
      - --enable-libx264
      - --enable-libx265
      - --enable-libxcb
      - --enable-libxml2
      - --enable-libxvid
      - --enable-nonfree
      - --enable-nvenc
      - --enable-omx
      - --enable-openal
      - --enable-opencl
      - --enable-opengl
      - --enable-openssl
      - --enable-runtime-cpudetect
      - --enable-sdl2
      - --enable-shared
      - --enable-vaapi
      - --enable-vdpau
      - --enable-version3
      - --enable-xlib
    prime:
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/share/ffmpeg/examples

  # Reference: https://pad.lv/1849478
  pipewire:
    after:
      - ffmpeg
    plugin: meson
    source: https://gitlab.freedesktop.org/pipewire/pipewire.git
    source-tag: '0.3.59'
    meson-parameters:
      - --prefix=/usr
      - --buildtype=release
      - --strip
      - -Dauto_features=enabled
      - -Dalsa=disabled
      - -Davahi=disabled
      - -Dbluez5=disabled
      - -Dbluez5-codec-aac=disabled
      - -Dbluez5-codec-aptx=disabled
      - -Dbluez5-codec-ldac=disabled
      - -Ddocs=disabled
      - -Decho-cancel-webrtc=disabled
      - -Dexamples=disabled
      - -Dffmpeg=disabled
      - -Dgstreamer-device-provider=disabled
      - -Djack=disabled
      - -Dlibcamera=disabled
      - -Dlibcanberra=disabled
      - -Dlibusb=disabled
      - -Dman=disabled
      - -Dpipewire-alsa=disabled
      - -Dpipewire-jack=disabled
      - -Dpw-cat=disabled
      - -Droc=disabled
      - -Dsession-managers=[]
      - -Dsystemd=disabled
      - -Dudev=disabled
      - -Dvulkan=disabled
    build-packages:
      - libdbus-1-dev
      - libglib2.0-dev
      - libgstreamer1.0-dev
      - libgstreamer-plugins-base1.0-dev
      - liblilv-dev
      - libsdl2-dev
      - libsndfile1-dev
      - libv4l-dev
      - meson
      - ninja-build
    stage-packages:
      - libgstreamer1.0-0
      - libgstreamer-plugins-base1.0-0
      - liblilv-0-0
      - libsdl2-2.0-0
      - libsndfile1
      - libv4l-0
    prime:
      - -usr/bin/pw-*
      - -usr/bin/spa-*
      - -usr/include
      - -usr/lib/$CRAFT_ARCH_TRIPLET/pkgconfig

  cef:
    plugin: cmake
    after:
      - ffmpeg
    source:
      - on amd64: https://cef-builds.spotifycdn.com/cef_binary_106.0.25%2Bgf7fefe5%2Bchromium-106.0.5249.61_linux64_minimal.tar.bz2
    build-packages:
      - libatk1.0-dev
      - libatk-bridge2.0-dev
      - libnss3-dev
      - libnspr4-dev
      - libxtst-dev
    stage-packages:
      - libatk-bridge2.0-0
      - libcups2
      - libnspr4
      - libnss3
      - libxtst6
    override-pull: |
      craftctl default
      sed -i 's|VERSION 3\.19|VERSION 3\.16|' CMakeLists.txt
      strip --strip-unneeded ${CRAFT_PART_SRC}/Release/*.so
      strip --strip-unneeded ${CRAFT_PART_SRC}/Release/chrome-sandbox
      rm -rf "${CRAFT_PART_SRC}/tests"
    override-build: |
      cd ${CRAFT_PART_SRC}
      cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_C_FLAGS_RELEASE=-s \
        -DCMAKE_CXX_FLAGS_RELEASE=-s \
        ${CRAFT_PART_SRC}
      make -j $(nproc) libcef_dll_wrapper

      # Put the binary assets somewhere where the obs part can access them
      mkdir -p ${CRAFT_STAGE}/CEF
      cp -R ${CRAFT_PART_SRC}/* ${CRAFT_STAGE}/CEF
    prime:
      - -CEF

  rnnoise:
    plugin: autotools
    source: https://gitlab.xiph.org/xiph/rnnoise.git
    autotools-configure-parameters:
      - --prefix=/usr
      - --disable-doc
      - --disable-examples
      - --disable-static
    prime:
      - -usr/include
      - -usr/lib/pkgconfig
      - -usr/lib/*.la

  qt6:
    plugin: nil
    build-packages:
      - qt6-base-dev
      - qt6-base-private-dev
      - libqt6svg6-dev
    stage-packages:
      - libqt6widgets6
      - libqt6svg6
      - libqt6xml6
      - qt6-wayland
    prime:
      #- -opt/qt515/bin
      - -usr/share/qt6/doc
      #- -opt/qt515/examples
      - -usr/include/${CRAFT_ARCH_TRIPLET}/qt6
      - -usr/lib/${CRAFT_ARCH_TRIPLET}/cmake/Qt6*
      #- -opt/qt515/lib/*.la
      - -usr/lib/${CRAFT_ARCH_TRIPLET}/libQt6*.prl
      - -usr/lib/${CRAFT_ARCH_TRIPLET}/libQt6*.a
      #- -opt/qt515/lib/pkgconfig
      - -usr/lib/${CRAFT_ARCH_TRIPLET}/qt6/mkspecs
      #- -opt/qt515/plugins/qmltooling
      #- -opt/qt515/qml

  # Based on https://obsproject.com/wiki/install-instructions#debian-based-build-directions
  obs:
    plugin: cmake
    after:
      - cef
      - ffmpeg
      - pipewire
      - qt6
      - rnnoise
      #- x264
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DUNIX_STRUCTURE=TRUE
      - -DDISABLE_UPDATE_MODULE=TRUE
      - -DBUILD_BROWSER=TRUE
      - -DCEF_ROOT_DIR=$CRAFT_STAGE/CEF
      - -DBROWSER_PANEL_SUPPORT_ENABLED=TRUE
      - -DENABLE_AJA=FALSE
      - -DENABLE_NEW_MPEGTS_OUTPUT=FALSE
      - -DENABLE_WAYLAND=TRUE
      - -DWITH_RTMPS=TRUE
      #- --trace
    source: https://github.com/obsproject/obs-studio.git
    source-tag: '28.0.3'
    parse-info: [usr/share/metainfo/com.obsproject.Studio.appdata.xml]
    override-pull: |
      craftctl default
      craftctl set version="$(git describe --tags)"

      # Update the icon path
      sed -i 's|Icon=com\.obsproject\.Studio|Icon=/usr/share/icons/hicolor/256x256/apps/com\.obsproject\.Studio\.png|' UI/xdg-data/com.obsproject.Studio.desktop

      cd "${CRAFT_PART_SRC}"

      # Work around for https://github.com/obsproject/obs-browser/issues/239
      if [ -d plugins/obs-browser/obs-browser-page ]; then
        mv -v plugins/obs-browser/obs-browser-page plugins/obs-browser/obs-browser-page-main
        sed -i 's|obs-browser-page/obs-browser-page-main.cpp|obs-browser-page-main/obs-browser-page-main.cpp|g' plugins/obs-browser/CMakeLists.txt
      fi

      git config --global advice.detachedHead false

      #  The following plugins are all intended to be built in tree
      git clone --recursive https://github.com/exeldro/obs-dir-watch-media.git ${CRAFT_PART_SRC}/plugins/obs-dir-watch-media
      echo "add_subdirectory(obs-dir-watch-media)" >> ${CRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-downstream-keyer.git ${CRAFT_PART_SRC}/UI/frontend-plugins/obs-downstream-keyer
      echo "add_subdirectory(obs-downstream-keyer)" >> ${CRAFT_PART_SRC}/UI/frontend-plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-dynamic-delay.git ${CRAFT_PART_SRC}/plugins/obs-dynamic-delay
      echo "add_subdirectory(obs-dynamic-delay)" >> ${CRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-freeze-filter.git ${CRAFT_PART_SRC}/plugins/obs-freeze-filter
      echo "add_subdirectory(obs-freeze-filter)" >> ${CRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-gradient-source.git ${CRAFT_PART_SRC}/plugins/obs-gradient-source
      echo "add_subdirectory(obs-gradient-source)" >> ${CRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-move-transition.git ${CRAFT_PART_SRC}/plugins/obs-move-transition --branch 2.6.4
      echo "add_subdirectory(obs-move-transition)" >> ${CRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-recursion-effect.git ${CRAFT_PART_SRC}/plugins/obs-recursion-effect
      echo "add_subdirectory(obs-recursion-effect)" >> ${CRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-replay-source.git ${CRAFT_PART_SRC}/plugins/obs-replay-source --branch 1.6.11
      echo "add_subdirectory(obs-replay-source)" >> ${CRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/iamscottxu/obs-rtspserver.git ${CRAFT_PART_SRC}/plugins/obs-rtspserver --branch v3.0.0-beta2
      echo "add_subdirectory(obs-rtspserver)" >> ${CRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/WarmUpTill/SceneSwitcher.git ${CRAFT_PART_SRC}/UI/frontend-plugins/SceneSwitcher --branch 1.19.0
      echo "add_subdirectory(SceneSwitcher)" >> ${CRAFT_PART_SRC}/UI/frontend-plugins/CMakeLists.txt

      git clone --recursive https://github.com/Qufyy/obs-scale-to-sound.git ${CRAFT_PART_SRC}/plugins/obs-scale-to-sound --branch 1.2.2
      echo "add_subdirectory(obs-scale-to-sound)" >> ${CRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-source-copy.git ${CRAFT_PART_SRC}/UI/frontend-plugins/obs-source-copy --branch v28
      echo "add_subdirectory(obs-source-copy)" >> ${CRAFT_PART_SRC}/UI/frontend-plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-source-record.git ${CRAFT_PART_SRC}/plugins/obs-source-record
      echo "add_subdirectory(obs-source-record)" >> ${CRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-source-switcher.git ${CRAFT_PART_SRC}/plugins/obs-source-switcher
      echo "add_subdirectory(obs-source-switcher)" >> ${CRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/Xaymar/obs-StreamFX.git ${CRAFT_PART_SRC}/plugins/obs-StreamFX --branch 0.12.0a134
      echo "add_subdirectory(obs-StreamFX)" >> ${CRAFT_PART_SRC}/plugins/CMakeLists.txt
      sed -i '/add_library(OBS::obs-frontend-api/d' ${CRAFT_PART_SRC}/plugins/obs-StreamFX/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-time-warp-scan.git ${CRAFT_PART_SRC}/plugins/obs-time-warp-scan
      echo "add_subdirectory(obs-time-warp-scan)" >> ${CRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-transition-table.git ${CRAFT_PART_SRC}/UI/frontend-plugins/obs-transition-table  --branch 0.2.5
      echo "add_subdirectory(obs-transition-table)" >> ${CRAFT_PART_SRC}/UI/frontend-plugins/CMakeLists.txt

    override-build: |
      # Stage libcaption headers required to build OBS and some out of tree plugins
      [ -d ${CRAFT_STAGE}/usr/include/caption/ ] || mkdir -p ${CRAFT_STAGE}/usr/include/caption/
      cp ${CRAFT_PART_SRC}/deps/libcaption/caption/*.h ${CRAFT_STAGE}/usr/include/caption/
      echo "LOG - Starting build"

      craftctl default

      # Stage cmake files required to build out of tree plugins
      echo "LOG - Copying cmake files"
      [ -d ${CRAFT_STAGE}/usr/include/cmake/external ] || mkdir -p ${CRAFT_STAGE}/usr/include/cmake/external
      cp ${CRAFT_PART_SRC}/cmake/external/*.cmake ${CRAFT_STAGE}/usr/include/cmake/external/
      echo "LOG - Done Copying cmake files"

    override-prime: |
      craftctl default
      # Symlink libaom.so to where StreamFX expects to find it
      rm -f ${CRAFT_PRIME}/usr/share/obs/obs-plugins/StreamFX/libaom.so
      cd ${CRAFT_PRIME}/usr/share/obs/obs-plugins/StreamFX/
      ln -s ../../../../lib/${CRAFT_ARCH_TRIPLET}/libaom.so .
    build-environment:
      - CMAKE_INCLUDE_PATH: ${CMAKE_INCLUDE_PATH:+$CMAKE_INCLUDE_PATH:}$CRAFT_STAGE/include:$CRAFT_STAGE/usr/include:$CRAFT_STAGE/include/$CRAFT_ARCH_TRIPLET:$CRAFT_STAGE/usr/include/$CRAFT_ARCH_TRIPLET
      - CMAKE_LIBRARY_PATH: ${CMAKE_LIBRARY_PATH:+$CMAKE_LIBRARY_PATH:}$CRAFT_STAGE/lib:$CRAFT_STAGE/usr/lib:$CRAFT_STAGE/lib/$CRAFT_ARCH_TRIPLET:$CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET
      #- CMAKE_PREFIX_PATH: ${CMAKE_PREFIX_PATH:+$CMAKE_PREFIX_PATH:}$CRAFT_STAGE/opt/qt515
      - LD_LIBRARY_PATH: ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CRAFT_STAGE/lib:$CRAFT_STAGE/usr/lib:$CRAFT_STAGE/lib/$CRAFT_ARCH_TRIPLET:$CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET
    build-packages:
      # FFmpeg and Qt6 packages are not listed as they're provided by the 'ffmpeg' and 'qt6' parts
      - clang-tidy
      - libasound2-dev
      - libcurl4-openssl-dev
      - libfdk-aac-dev
      - libfontconfig1-dev
      - libfreetype6-dev
      - libgl1-mesa-dev
      - libjack-dev           # not libjack-jackd2-dev as upstream suggests; snapd currently supports jack1
      - libjansson-dev
      - libluajit-5.1-dev
      - libmbedtls-dev
      - libpci-dev
      - libpulse-dev
      - libspeexdsp-dev
      - libudev-dev
      - libv4l-dev
      - libvlc-dev
      - libvlccore-dev
      - libwayland-dev
      - libx11-dev
      - libx11-xcb-dev
      - libxcb-composite0-dev
      - libxcb-randr0-dev
      - libxcb-shm0-dev
      - libxcb-xfixes0-dev
      - libxcb-xinerama0-dev
      - libxcb-xinput-dev
      - libxcb1-dev
      - libxcomposite-dev
      - libxinerama-dev
      - pkg-config
      - python3-dev
      - re2c
      - swig
      # Required by StreamFX
      - libprocps-dev
      - ninja-build
      # Required by Advanced Scene Switcher
      - libopencv-dev
      - libxss-dev
      # Required to get patches
      - wget
    stage-packages:
      # FFmpeg and Qt6 packages are not listed as they're provided by the 'ffmpeg' and 'qt6' parts
      - libasound2
      - libcurl4
      - libfdk-aac2
      - libfreetype6
      - libgl1
      - libglvnd0
      - jackd1                # not libjack-jackd2-0 as upstream suggests; snapd currently supports jack1
      - libjansson4
      - libluajit-5.1-2
      - libmbedtls14
      - libpci3
      - libpulse0
      - libpython3.10
      - libspeexdsp1
      - libv4l-0
      - libv4l2rds0
      - libvlc5
      - libvlccore9
      - libx11-6
      - libx11-xcb1
      - libxcb-composite0
      - libxcb-randr0
      - libxcb-shm0
      - libxcb-xfixes0
      - libxcb-xinerama0
      - libxcb-xinput0
      - libxcomposite1
      - libxinerama1
      # Required by Advanced Scene Switcher
      - libopencv-imgproc4.5d
      - libopencv-objdetect4.5d
      - libxss1
    prime:
      - -usr/include
      - -usr/lib/cmake
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libavcodec.*     # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libavdevice.*    # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libavfilter.*    # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libavformat.*    # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libavutil.*      # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libpostproc.*    # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libswresample.*  # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libswscale.*     # Provided by the ffmpeg part
      #- -usr/lib/$CRAFT_ARCH_TRIPLET/libx264.*        # Provided by the x264 part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/pkgconfig

  # Required for VirtualCam; stage the minimum required binaries
  kmod:
    plugin: nil
    stage-packages:
      - kmod
    prime:
      - bin
      - sbin

  # The Advanced Scene Switcher looks in hardcoded paths for libcurl.so.4
  # So, copy libcurl.so.4 to a location referenced by the snap layouts
  libcurl:
    plugin: nil
    stage-packages:
      - libcurl4
    organize:
      usr/lib/$CRAFT_ARCH_TRIPLET/libcurl.so.4: /usr/local/lib/
    prime:
      - usr/local/lib

  libndi:
    plugin: nil
    source: http://514f211588de67e4fdcf-437b8dd50f60b69cf0974b538e50585b.r63.cf1.rackcdn.com/Utilities/SDK/NDI_SDK_Linux_v2/InstallNDISDK_v4_Linux.tar.gz
    source-checksum: "sha256/45621d7e70e73d5e6b8d07cc8d55a920fac979508de65db705eff7a188222e71"
    stage-packages:
      - libavahi-client3
    override-build: |
      yes | env PAGER=cat ./InstallNDISDK_v4_Linux.sh || true
      SDK="${CRAFT_PART_BUILD}/NDI SDK for Linux"
      install -D -m644 "${SDK}/include/"*.h -t "${CRAFT_PART_INSTALL}/usr/include"
      install -D -m755 "${SDK}/lib/${CRAFT_ARCH_TRIPLET}/libndi.so.4".*.* -t "${CRAFT_PART_INSTALL}/usr/local/lib/"
      cd "${CRAFT_PART_INSTALL}/usr/local/lib"
      ln -s "libndi.so.4".*.* "libndi.so.4"
      ln -s "libndi.so.4".*.*  libndi.so
    prime:
      - usr/local/lib

  # Required by Input Overlay if it's added as a 3rd party plugin
  libuiohook:
    plugin: cmake
    source: https://github.com/kwhat/libuiohook.git
    source-branch: '1.2'
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DBUILD_SHARED_LIBS=TRUE
    build-packages:
      - libxinerama-dev
      - libxkbcommon-x11-dev
      - libxkbfile-dev
      - libxt-dev
      - libxtst-dev
      - pkg-config
    stage-packages:
      - libice6
      - libsm6
      - libxcb-xkb1
      - libxkbcommon-x11-0
      - libxkbfile1
      - libxinerama1
      - libxt6
      - libxtst6
    prime:
      - -usr/include
      - -usr/lib/$CRAFT_ARCH_TRIPLET/cmake
      - -usr/lib/$CRAFT_ARCH_TRIPLET/pkgconfig

  # Required by Input Overlay if it's added as a 3rd party plugin
  libgamepad:
    plugin: cmake
    source: https://github.com/univrsal/libgamepad.git
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DGAMEPAD_ENABLE_TESTS=FALSE
      - -DGAMEPAD_ENABLE_STATIC=FALSE
      - -DGAMEPAD_ENABLE_SHARED=TRUE
    prime:
      - usr/lib/$CRAFT_ARCH_TRIPLET/libgamepad.so

  # Required by Input Overlay if it's added as a 3rd party plugin
  netlib:
    plugin: cmake
    source: https://github.com/univrsal/netlib.git
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DNETLIB_ENABLE_TESTS=FALSE
      - -DNETLIB_ENABLE_STATIC=FALSE
      - -DNETLIB_ENABLE_SHARED=TRUE
    prime:
      - usr/lib/$CRAFT_ARCH_TRIPLET/libnetlib.so

  vlc-plugins:
    after:
      - srt
      #- aom
    plugin: nil
    stage-packages:
      - freeglut3
      - libglu1-mesa
      - libslang2
      - vlc-plugin-base
    prime:
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libsrt.*         # Provided by the srt part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libavcodec.*     # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libavdevice.*    # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libavfilter.*    # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libavformat.*    # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libavutil.*      # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libpostproc.*    # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libswresample.*  # Provided by the ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libswscale.*     # Provided by the ffmpeg part
      #- -usr/lib/$CRAFT_ARCH_TRIPLET/libx264.*        # Provided by the x264 part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/vlc/lua
      - -usr/share/icons
      - -usr/share/vlc

  obs-audio-pan:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/norihiro/obs-audio-pan-filter.git
    source-tag: '0.2.2'
    #build-environment:
    #  - Qt5_DIR: $CRAFT_STAGE/opt/qt515
    override-build: |
      mkdir -p $CRAFT_PART_SRC/build
      cd $CRAFT_PART_SRC/build
      cmake \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_C_FLAGS_RELEASE=-s \
        -DCMAKE_CXX_FLAGS_RELEASE=-s \
        -DLIBOBS_INCLUDE_DIR=$CRAFT_STAGE/usr/include/obs/ \
        $CRAFT_PART_SRC
      make -j $(nproc)
      make install DESTDIR=$CRAFT_PART_INSTALL
    organize:
      usr/lib/$CRAFT_ARCH_TRIPLET/obs-plugins/obs-audio-pan-filter.so: usr/lib/obs-plugins/

  obs-dvd-screensaver:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/ayowel/dvds3.git
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DLIBOBS_INCLUDE_DIR=$CRAFT_STAGE/usr/include/obs/
      - -DLIBOBS_LIB=$CRAFT_STAGE/usr/lib/
      - -DGLOBAL_INSTALLATION=TRUE
      - -Wno-error
    override-pull: |
      craftctl default
      sed -i '/ObsPluginHelpers/d' CMakeLists.txt
      sed -i '/find_package(LibObs REQUIRED)/d' CMakeLists.txt
      sed -i '/${dvd-screensaver_SOURCES}/a find_package(LibObs REQUIRED)' CMakeLists.txt
      sed -i '/${dvd-screensaver_SOURCES}/a include(${CMAKE_SOURCE_DIR}/cmake/ObsPluginHelpers.cmake)' CMakeLists.txt
      sed -i '/${dvd-screensaver_SOURCES}/a set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")' CMakeLists.txt

  obs-gphoto:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/adlerweb/obs-gphoto.git
    source-branch: 'adlerweb'
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DLIBOBS_INCLUDE_DIR=$CRAFT_STAGE/usr/include/obs/
      - -DSYSTEM_INSTALL=TRUE
    override-pull: |
      craftctl default
      sed -i 's/LibObs/libobs/g' CMakeLists.txt
      sed -i 's/${LIBOBS_LIBRARIES}/OBS::libobs/g' CMakeLists.txt
    build-packages:
      - libgphoto2-dev
      - libjpeg-turbo8-dev
      - libudev-dev
    stage-packages:
      - libgphoto2-6
      - libjpeg-turbo8
      - libudev1
      - libusb-1.0-0
    organize:
      root/stage/usr/lib/obs-plugins/obs-gphoto.so: usr/lib/obs-plugins/
    prime:
      - -root

  obs-gstreamer:
    plugin: meson
    after: [ obs ]
    source: https://github.com/fzwoch/obs-gstreamer.git
    source-tag: 'v0.3.5'
    meson-parameters:
      - --prefix=/usr
      - --buildtype=release
      - --strip
    build-packages:
      - libgstreamer1.0-dev
      - libgstreamer-plugins-base1.0-dev
      - libgstreamer-plugins-good1.0-dev
      - libjack-dev
      - meson
      - ninja-build
    stage-packages:
      - freeglut3
      - gstreamer1.0-plugins-good
      - libglu1-mesa
      - libgstreamer-plugins-base1.0-0
      - libjack0
    organize:
      usr/lib/$CRAFT_ARCH_TRIPLET/obs-plugins/obs-gstreamer.so: usr/lib/obs-plugins/

  obs-looking-glass:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/gnif/LookingGlass.git
    source-tag: 'B5'
    build-packages:
      - binutils-dev
    override-build: |
      mkdir -p $CRAFT_PART_SRC/obs/build
      cd $CRAFT_PART_SRC/obs/build
      cmake $CRAFT_PART_SRC/obs
      make -j $(nproc)
      make install DESTDIR=$CRAFT_PART_INSTALL
    organize:
      usr/local/share/obs/obs-plugins/looking-glass-obs/bin/64bit: usr/lib/obs-plugins/

  obs-ndi:
    plugin: cmake
    after:
      - libndi
      - obs
    source: https://github.com/Palakis/obs-ndi.git
    #source-tag: '4.9.1'
    source-branch: rewrite
    #build-environment:
    #  - Qt5_DIR: $CRAFT_STAGE/opt/qt515
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DLIBOBS_INCLUDE_DIR=$CRAFT_STAGE/usr/include/obs/
      - -DUSE_UBUNTU_FIX=TRUE
    prime:
      - -usr/lib/$CRAFT_ARCH_TRIPLET/obs-plugins/obs-ndi.so

  #obs-nvfbc:
  #  plugin: meson
  #  after: [ obs ]
  #  source: https://gitlab.com/fzwoch/obs-nvfbc.git
  #  source-tag: 'v0.0.5'
  #  meson-parameters:
  #    - --prefix=/usr
  #    - --buildtype=release
  #    - --strip
  #  organize:
  #    usr/lib/$SNAPCRAFT_ARCH_TRIPLET/obs-plugins/nvfbc.so: usr/lib/obs-plugins/


  # Vulkan support added as per: https://forum.snapcraft.io/t/correct-way-to-do-nvidia-vulkan/20361
  obs-vkcapture:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/nowrep/obs-vkcapture.git
    source-tag: 'v1.2.0'
    cmake-parameters:
      - -DOBS_USE_EGL=1
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      #- -DPKG_CONFIG_PATH=$CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET/pkgconfig
    override-pull: |
      craftctl default
      sed -i 's/LibObs QUIET/libobs REQUIRED/g' CMakeLists.txt
      sed -i 's/PkgConfig::LIBOBS/OBS::libobs/g' CMakeLists.txt
    build-packages:
      - libvulkan-dev
    stage-packages:
      - libvulkan1
      - mesa-vulkan-drivers
    organize:
      usr/lib/$CRAFT_ARCH_TRIPLET/obs-plugins/linux-vkcapture.so: usr/lib/obs-plugins/
    prime:
      # Confinement prevents these from running external apps, so remove them
      - -usr/bin/obs-glcapture
      - -usr/bin/obs-vkcapture

  obs-rgb-levels:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/petrifiedpenguin/obs-rgb-levels-filter.git
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DLIBOBS_INCLUDE_DIR=$CRAFT_STAGE/usr/include/obs/
      - -DLIBOBS_LIB=$CRAFT_STAGE/usr/lib/
    override-pull: |
      craftctl default
      sed -i '/LibObs/d' CMakeLists.txt
      sed -i '/target_link_libraries/i include(external/FindLibObs.cmake)' CMakeLists.txt
      sed -i '/target_link_libraries/i find_package(libobs REQUIRED)' CMakeLists.txt
      sed -i 's/${LIBOBS_LIB}/OBS::libobs/g' CMakeLists.txt

  obs-spectralizer:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/univrsal/spectralizer.git
    source-tag: 'v1.3.4'
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DLIBOBS_INCLUDE_DIR=$CRAFT_STAGE/usr/include/obs/
      - -DGLOBAL_INSTALLATION=TRUE
    build-packages:
      - libfftw3-dev
    stage-packages:
      - libfftw3-3
    override-pull: |
      craftctl default
      sed -i 's/LibObs REQUIRED/libobs REQUIRED/g' CMakeLists.txt
      sed -i 's/${LIBOBS_LIBRARIES}/OBS::libobs/g' CMakeLists.txt

  obs-text-pango:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/kkartaltepe/obs-text-pango.git
    source-tag: 'v1.0'
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DOBS_INCLUDE_DIRS=$CRAFT_STAGE/usr/include/obs/
      - -DOBS_LIBRARIES=$CRAFT_STAGE/usr/lib/
    build-packages:
      - libpango1.0-dev
    stage-packages:
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libpangoft2-1.0-0
    organize:
      usr/data/obs-plugins/text-pango/locale/*.ini: usr/share/obs/obs-plugins/text-pango/locale/
      usr/obs-plugins/*bit/libtext-pango.so: usr/lib/obs-plugins/

  obs-vnc:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/norihiro/obs-vnc.git
    source-branch: obs-28
    #source-tag: '0.4.0'
    build-packages:
      - libvncserver-dev
    stage-packages:
      - libvncclient1
    override-pull: |
      craftctl default
      #sed -i 's/LibObs REQUIRED/libobs REQUIRED/g' CMakeLists.txt
      #sed -i 's/${OBS_LIBRARIES}/OBS::libobs/g' CMakeLists.txt
    override-build: |
      mkdir -p $CRAFT_PART_SRC/build
      cd $CRAFT_PART_SRC/build
      cmake \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_C_FLAGS_RELEASE=-s \
        -DCMAKE_CXX_FLAGS_RELEASE=-s \
        $CRAFT_PART_SRC
        #-DLIBOBS_INCLUDE_DIR=$CRAFT_STAGE/usr/include/obs/ \
      make -j $(nproc)
      make install DESTDIR=$CRAFT_PART_INSTALL
    organize:
      usr/lib/$CRAFT_ARCH_TRIPLET/obs-plugins/obs-vnc.so: usr/lib/obs-plugins/

  #obs-websocket:
  #  plugin: cmake
  #  after: [ obs ]
  #  source: https://github.com/obsproject/obs-websocket.git
  #  source-tag: 4.9.1-compat
  #  cmake-parameters:
  #    - -DCMAKE_INSTALL_PREFIX=/usr
  #    - -DUSE_UBUNTU_FIX=true
  #    - ..
  #  prime:
  #    - -usr/lib/$CRAFT_ARCH_TRIPLET/obs-plugins

  # Using the CPU runtime, it is not possible to satisify all the GPU runtime requirements.
  onnxruntime:
    plugin: dump
    source: https://github.com/microsoft/onnxruntime/releases/download/v1.12.1/onnxruntime-linux-x64-1.12.1.tgz
    organize:
      include/*.h: usr/include/
      lib/*.so*: usr/lib/
    prime:
      - usr/lib

  obs-backgroundremoval:
    plugin: cmake
    after: [ obs, onnxruntime ]
    #source: https://github.com/MadMartian/obs-backgroundremoval.git
    source: https://github.com/royshil/obs-backgroundremoval.git
    #source-tag: 'v0.4.0'
    build-packages:
      - libopencv-dev
    override-pull: |
      craftctl default
      cd "${CRAFT_PART_SRC}"
      # FIXME: we remove required links hereafter
      sed -i '/OrtSessionOptionsAppendExecutionProvider_DML/d' src/background-filter.cpp
      #sed -i '/find_package(obs-frontend-api REQUIRED)/d' CMakeLists.txt
      sed -i '/include(external\/ObsPluginHelpers.cmake)/d' CMakeLists.txt
      sed -i '/target_link_libraries.*obs-frontend-api/d' CMakeLists.txt
      #sed -i 's/OBS::libobs OBS::obs-frontend-api/OBS::libobs/g' CMakeLists.txt
      #sed -i 's|include(external/FindLibObs.cmake)|find_package(LibObs REQUIRED)|g' CMakeLists.txt
      #git remote add base_repo https://github.com/royshil/obs-backgroundremoval.git
      #git fetch base_repo --tags
    override-build: |
      cd "${CRAFT_PART_SRC}"
      mkdir -p "${CRAFT_PART_SRC}/build"
      cd "${CRAFT_PART_SRC}/build"
      cmake \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_MODULE_LINKER_FLAGS="-L${CRAFT_STAGE}/usr/lib/ -lonnxruntime" \
        -DLIBOBS_INCLUDE_DIR="${CRAFT_STAGE}"/usr/include/obs/ \
        -DOnnxruntime_INCLUDE_DIR="${CRAFT_STAGE}"/usr/include/ \
        -DOnnxruntime_LIBRARIES="${CRAFT_STAGE}"/usr/lib/libonnxruntime.so \
        "${CRAFT_PART_SRC}"
        #-DLIBOBS_LIB=$CRAFT_STAGE/usr/lib/ \
      make -j $(nproc)
      make install DESTDIR="${CRAFT_PART_INSTALL}"
    organize:
      usr/lib/$CRAFT_ARCH_TRIPLET/obs-plugins/obs-backgroundremoval.so: usr/lib/obs-plugins/

  obs-wrapper:
    plugin: dump
    after:
      - obs-audio-pan
      - obs-backgroundremoval
      - obs-dvd-screensaver
      - obs-gphoto
      - obs-gstreamer
      - obs-looking-glass
      - obs-ndi
      - obs-rgb-levels
      - obs-text-pango
      - obs-spectralizer
      - obs-vkcapture
      - obs-vnc
      #- obs-websocket
    source: snap/local/
    stage-packages:
      - mesa-utils
      - mesa-utils-extra
      - vainfo
      - vdpauinfo
      - vulkan-tools
    organize:
      obs-wrapper: bin/

  cleanup:
    plugin: nil
    after:
      #- aom
      - cef
      #- dav1d
      #- desktop-launch
      - ffmpeg
      - kmod
      - libcurl
      - libgamepad
      - libuiohook
      - netlib
      - obs-wrapper
      - qt6
      - rnnoise
      - vlc-plugins
      #- x264
    override-prime: |
      for CRUFT in \
        usr/share/GConf \
        usr/share/apport \
        usr/share/bug \
        usr/share/fonts \
        usr/share/icons/Adwaita \
        usr/share/icons/Humanity* \
        usr/share/icons/LoginIcons \
        usr/share/icons/ubuntu-mono-* \
        usr/share/lintian \
        usr/share/man \
        usr/share/pkgconfig; do
        rm -rf ${CRAFT_PRIME}/${CRUFT}
      done
      find ${CRAFT_PRIME}/usr/share/doc/ -type f -not -name 'copyright' -delete || true
      rm ${CRAFT_PRIME}/usr/share/doc/*/*.gz 2>/dev/null || true
      rm -rf ${CRAFT_PRIME}/usr/share/doc/*/examples || true
      rm ${CRAFT_PRIME}/usr/share/doc/*/README* 2>/dev/null || true
      find ${CRAFT_PRIME}/usr -type d -empty -delete || true
