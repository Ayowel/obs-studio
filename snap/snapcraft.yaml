name: obs-studio
adopt-info: obs
base: core20
grade: stable
confinement: strict
license: GPL-2.0
architectures:
  - build-on: amd64

plugs:
  # Support for common GTK themes
  # https://forum.snapcraft.io/t/how-to-use-the-system-gtk-theme-via-the-gtk-common-themes-snap/6235
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes

layout:
  /usr/lib/obs-plugins:
    bind: $SNAP/usr/lib/obs-plugins
  /usr/lib/obs-scripting:
    bind: $SNAP/usr/lib/obs-scripting
  /usr/local/lib:
    bind: $SNAP/usr/local/lib
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/alsa-lib
  /usr/share/alsa:
    bind: $SNAP/usr/share/alsa
  /usr/share/libdrm:
    bind: $SNAP/usr/share/libdrm
  /usr/share/obs:
    bind: $SNAP/usr/share/obs
  /usr/share/X11:
    bind: $SNAP/usr/share/X11

apps:
  obs-studio:
    command: usr/bin/obs --multi
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    common-id: com.obsproject.Studio
    desktop: usr/share/applications/com.obsproject.Studio.desktop
    environment:
      PYTHONPATH: $PYTHONPATH:$SNAP/usr/lib/python3/dist-packages
      SNAP_DESKTOP_RUNTIME: $SNAP
      GTK_USE_PORTAL: 1
      QT_QPA_PLATFORMTHEME: flatpak
    plugs: &plugs
      - adb-support
      - alsa
      - audio-playback
      - audio-record
      - avahi-control
      - browser-support
      - camera
      - desktop
      - desktop-legacy
      - gsettings
      - home
      - jack1
      - joystick
      - kernel-module-observe
      - network
      - network-bind
      - opengl
      - password-manager-service
      - process-control
      - pulseaudio
      - raw-usb
      - removable-media
      - screen-inhibit-control
      - system-observe
      - unity7
      - upower-observe
      - wayland
      - x11
  eglinfo:
    command: usr/bin/eglinfo
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  glxinfo:
    command: usr/bin/glxinfo
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  ffmpeg:
    command: usr/bin/ffmpeg
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  ffplay:
    command: usr/bin/ffplay
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  ffprobe:
    command: usr/bin/ffprobe
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  srt-ffplay:
    command: usr/bin/srt-ffplay
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  srt-file-transmit:
    command: usr/bin/srt-file-transmit
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  srt-live-transmit:
    command: usr/bin/srt-live-transmit
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  srt-tunnel:
    command: usr/bin/srt-tunnel
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  vainfo:
    command: usr/bin/vainfo
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs
  vdpauinfo:
    command: usr/bin/vdpauinfo
    command-chain:
      - snap/command-chain/desktop-launch
      - bin/obs-wrapper
    environment:
      SNAP_DESKTOP_RUNTIME: $SNAP
    plugs: *plugs

parts:
  desktop-qt5:
    plugin: make
    source: $SNAPCRAFT_EXTENSIONS_DIR/desktop
    source-subdir: kde-neon
    build-packages:
      - qtbase5-dev
    stage-packages:
      - gsettings-desktop-schemas
      - qt5-gtk-platformtheme
      - qt5-xdgdesktopportal-platformtheme
      - qtwayland5

  nv-codec-headers:
    plugin: make
    source: https://github.com/FFmpeg/nv-codec-headers.git
    source-branch: 'sdk/10.0'
    make-parameters:
      - PREFIX=/usr
    build-packages:
      - pkg-config

  srt:
    plugin: cmake
    source: https://github.com/Haivision/srt.git
    source-tag: 'v1.4.2'
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DENABLE_STATIC=OFF
    build-packages:
      - libssl-dev

  ffmpeg:
    plugin: autotools
    after:
      - nv-codec-headers
      - srt
    source: https://github.com/FFmpeg/FFmpeg.git
    source-branch: release/4.3
    build-packages:
      - libass-dev
      - libbz2-dev
      - libdrm-dev
      - libfdk-aac-dev
      - liblzma-dev
      - libmp3lame-dev
      - libomxil-bellagio-dev
      - libopenal-dev
      - libopenjp2-7-dev
      - libopus-dev
      - libpulse-dev
      - librsvg2-dev
      - libsctp-dev
      - libsdl2-dev
      - libspeex-dev
      - libssl-dev
      - libtheora-dev
      - libtwolame-dev
      - libva-dev
      - libv4l-dev
      - libvdpau-dev
      - libvorbis-dev
      - libvpx-dev
      - libwebp-dev
      - libx264-dev
      - libx265-dev
      - libxcb-shape0-dev
      - libxcb-shm0-dev
      - libxcb-xfixes0-dev
      - libxml2-dev
      - libxv-dev
      - libxvidcore-dev
      - ocl-icd-opencl-dev
      - opencl-headers
      - pkg-config
      - yasm
    stage-packages:
      - libass9
      - libdrm2
      - libfdk-aac1
      - libmp3lame0
      - libopenal1
      - libopenjp2-7
      - libopus0
      - libpulse0
      - librsvg2-2
      - libsdl2-2.0-0
      - libspeex1
      - libssl1.1
      - libtheora0
      - libtwolame0
      - libv4l-0
      - libv4l2rds0
      - libva-drm2
      - libva-glx2
      - libva-wayland2
      - libvdpau-va-gl1
      - libvorbis0a
      - libvorbisenc2
      - libvpx6
      - libwebp6
      - libwebpmux3
      - libx11-6
      - libx264-155
      - libx265-179
      - libxau6
      - libxcb-shape0
      - libxcb-shm0
      - libxcb-xfixes0
      - libxcb1
      - libxdmcp6
      - libxext6
      - libxml2
      - libxv1
      - libxvidcore4
      - mesa-vdpau-drivers
      - ocl-icd-libopencl1
      # Only available for amd64 and i386
      - try:
        - i965-va-driver
        - mesa-va-drivers
    autotools-configure-parameters:
      - --prefix=/usr
      - --disable-avisynth
      - --disable-crystalhd
      - --disable-debug
      - --disable-doc
      - --disable-static
      - --enable-cuda
      - --enable-cuvid
      - --enable-gpl
      - --enable-libass
      - --enable-libdrm
      - --enable-libfdk-aac
      - --enable-libfontconfig
      - --enable-libfreetype
      - --enable-libmp3lame
      - --enable-libopenjpeg
      - --enable-libopus
      - --enable-libpulse
      - --enable-librsvg
      - --enable-libspeex
      - --enable-libsrt
      - --enable-libtheora
      - --enable-libtwolame
      - --enable-libv4l2
      - --enable-libvorbis
      - --enable-libvpx
      - --enable-libwebp
      - --enable-libx264
      - --enable-libx265
      - --enable-libxcb
      - --enable-libxml2
      - --enable-libxvid
      - --enable-nonfree
      - --enable-nvenc
      - --enable-omx
      - --enable-openal
      - --enable-opencl
      - --enable-opengl
      - --enable-openssl
      - --enable-runtime-cpudetect
      - --enable-sdl2
      - --enable-shared
      - --enable-vaapi
      - --enable-vdpau
      - --enable-version3
      - --enable-xlib

  cef:
    plugin: cmake
    source:
      - on amd64: https://cef-builds.spotifycdn.com/cef_binary_88.2.7%2Bgc18ff58%2Bchromium-88.0.4324.150_linux64_minimal.tar.bz2
      - on arm64: https://cef-builds.spotifycdn.com/cef_binary_88.2.7%2Bgc18ff58%2Bchromium-88.0.4324.150_linuxarm64_minimal.tar.bz2
    build-packages:
      - libatk1.0-dev
      - libatk-bridge2.0-dev
      - libnss3-dev
      - libnspr4-dev
      - libxtst-dev
    stage-packages:
      - libatk-bridge2.0-0
      - libcups2
      - libnspr4
      - libnss3
      - libxtst6
    override-pull: |
      snapcraftctl pull
      strip --strip-unneeded ${SNAPCRAFT_PART_SRC}/Release/*.so
      strip --strip-unneeded ${SNAPCRAFT_PART_SRC}/Release/swiftshader/*.so
      strip --strip-unneeded ${SNAPCRAFT_PART_SRC}/Release/chrome-sandbox
    override-build: |
      cd ${SNAPCRAFT_PART_SRC}
      cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_C_FLAGS_RELEASE=-s \
        -DCMAKE_CXX_FLAGS_RELEASE=-s \
        ${SNAPCRAFT_PART_SRC}
      make -j $(nproc) libcef_dll_wrapper

      # Put the binary assets somewhere where the obs part can access them
      mkdir -p ${SNAPCRAFT_STAGE}/CEF
      cp -R ${SNAPCRAFT_PART_SRC}/* ${SNAPCRAFT_STAGE}/CEF

  rnnoise:
    plugin: autotools
    source: https://github.com/xiph/rnnoise.git
    autotools-configure-parameters:
      - --prefix=/usr
      - --disable-doc
      - --disable-examples
      - --disable-static
    stage:
      - -usr/lib/*.la

  # Based on https://obsproject.com/wiki/install-instructions#debian-based-build-directions
  obs:
    plugin: cmake
    after:
      - cef
      - ffmpeg
      - rnnoise
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DUNIX_STRUCTURE=TRUE
      - -DDISABLE_UPDATE_MODULE=TRUE
      - -DBUILD_BROWSER=TRUE
      - -DCEF_ROOT_DIR=$SNAPCRAFT_STAGE/CEF
      - -DBROWSER_PANEL_SUPPORT_ENABLED=TRUE
    source: https://github.com/obsproject/obs-studio.git
    #source-tag: '26.1.2'
    source-commit: '23e9d4153e00fa0944a7387fb3c7206a3ba34006'
    parse-info: [usr/share/metainfo/com.obsproject.Studio.appdata.xml]
    override-pull: |
      snapcraftctl pull
      snapcraftctl set-version "$(git describe --tags)"

      # Update the icon path
      sed -i 's|Icon=com\.obsproject\.Studio|Icon=/usr/share/icons/hicolor/256x256/apps/com\.obsproject\.Studio\.png|' UI/xdg-data/com.obsproject.Studio.desktop

      # Apply the "Save device by path" patch https://github.com/obsproject/obs-studio/pull/3437
      wget -q "https://patch-diff.githubusercontent.com/raw/obsproject/obs-studio/pull/3437.diff" -O ${SNAPCRAFT_PART_SRC}/3437.diff
      patch -p1 < ${SNAPCRAFT_PART_SRC}/3437.diff

      # Apply the "Fix qt display bug with preview widgets" patch https://github.com/obsproject/obs-studio/pull/4235
      wget -q "https://patch-diff.githubusercontent.com/raw/obsproject/obs-studio/pull/4235.diff" -O ${SNAPCRAFT_PART_SRC}/4235.diff
      patch -p1 < ${SNAPCRAFT_PART_SRC}/4235.diff

      cd "${SNAPCRAFT_PART_SRC}"

      # Work around for https://github.com/obsproject/obs-browser/issues/239
      if [ -d plugins/obs-browser/obs-browser-page ]; then
        mv -v plugins/obs-browser/obs-browser-page plugins/obs-browser/obs-browser-page-main
        sed -i 's|obs-browser-page/obs-browser-page-main.cpp|obs-browser-page-main/obs-browser-page-main.cpp|g' plugins/obs-browser/CMakeLists.txt
      fi

      #  The following plugins are all intended to be built in tree
      git clone --recursive https://github.com/WarmUpTill/SceneSwitcher.git ${SNAPCRAFT_PART_SRC}/UI/frontend-plugins/SceneSwitcher --branch 1.9
      echo "add_subdirectory(SceneSwitcher)" >> ${SNAPCRAFT_PART_SRC}/UI/frontend-plugins/CMakeLists.txt

      git clone --recursive https://github.com/Xaymar/obs-StreamFX.git ${SNAPCRAFT_PART_SRC}/plugins/obs-StreamFX --branch 0.9.3
      echo "add_subdirectory(obs-StreamFX)" >> ${SNAPCRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-source-switcher.git ${SNAPCRAFT_PART_SRC}/plugins/obs-source-switcher
      echo "add_subdirectory(obs-source-switcher)" >> ${SNAPCRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-move-transition.git ${SNAPCRAFT_PART_SRC}/plugins/obs-move-transition --branch 2.3.2
      echo "add_subdirectory(obs-move-transition)" >> ${SNAPCRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-freeze-filter.git ${SNAPCRAFT_PART_SRC}/plugins/obs-freeze-filter
      echo "add_subdirectory(obs-freeze-filter)" >> ${SNAPCRAFT_PART_SRC}/plugins/CMakeLists.txt

      #git clone --recursive https://github.com/exeldro/obs-replay-source.git ${SNAPCRAFT_PART_SRC}/plugins/obs-replay-source
      #echo "add_subdirectory(obs-replay-source)" >> ${SNAPCRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-dir-watch-media.git ${SNAPCRAFT_PART_SRC}/plugins/obs-dir-watch-media
      echo "add_subdirectory(obs-dir-watch-media)" >> ${SNAPCRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-dynamic-delay.git ${SNAPCRAFT_PART_SRC}/plugins/obs-dynamic-delay
      echo "add_subdirectory(obs-dynamic-delay)" >> ${SNAPCRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-recursion-effect.git ${SNAPCRAFT_PART_SRC}/plugins/obs-recursion-effect
      echo "add_subdirectory(obs-recursion-effect)" >> ${SNAPCRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-gradient-source.git ${SNAPCRAFT_PART_SRC}/plugins/obs-gradient-source
      echo "add_subdirectory(obs-gradient-source)" >> ${SNAPCRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-time-warp-scan.git ${SNAPCRAFT_PART_SRC}/plugins/obs-time-warp-scan
      echo "add_subdirectory(obs-time-warp-scan)" >> ${SNAPCRAFT_PART_SRC}/plugins/CMakeLists.txt

      git clone --recursive https://github.com/exeldro/obs-transition-table.git ${SNAPCRAFT_PART_SRC}/UI/frontend-plugins/obs-transition-table
      echo "add_subdirectory(obs-transition-table)" >> ${SNAPCRAFT_PART_SRC}/UI/frontend-plugins/CMakeLists.txt

      git clone --recursive https://github.com/iamscottxu/obs-rtspserver.git ${SNAPCRAFT_PART_SRC}/plugins/obs-rtspserver --branch v1.2.0
      echo "add_subdirectory(obs-rtspserver)" >> ${SNAPCRAFT_PART_SRC}/plugins/CMakeLists.txt
    override-build: |
      # Make sure the libcaption headers are discoverable
      [ -d ${SNAPCRAFT_STAGE}/usr/include/caption/ ] || mkdir -p ${SNAPCRAFT_STAGE}/usr/include/caption/
      cp ${SNAPCRAFT_PART_SRC}/deps/libcaption/caption/*.h ${SNAPCRAFT_STAGE}/usr/include/caption/
      snapcraftctl build
    override-stage: |
      snapcraftctl stage
      # Stage headers required for out of tree plugins to build
      cp ${SNAPCRAFT_PART_SRC}/UI/obs-frontend-api/*.h ${SNAPCRAFT_STAGE}/usr/include/obs/
      [ -d ${SNAPCRAFT_STAGE}/usr/include/cmake/external ] || mkdir -p ${SNAPCRAFT_STAGE}/usr/include/cmake/external
      cp ${SNAPCRAFT_PART_SRC}/cmake/external/*.cmake ${SNAPCRAFT_STAGE}/usr/include/cmake/external/
    build-environment:
      - CMAKE_INCLUDE_PATH: $CMAKE_INCLUDE_PATH:$SNAPCRAFT_STAGE/include:$SNAPCRAFT_STAGE/usr/include:$SNAPCRAFT_STAGE/include/$SNAPCRAFT_ARCH_TRIPLET:$SNAPCRAFT_STAGE/usr/include/$SNAPCRAFT_ARCH_TRIPLET
      - CMAKE_LIBRARY_PATH: $CMAKE_LIBRARY_PATH:$SNAPCRAFT_STAGE/lib:$SNAPCRAFT_STAGE/usr/lib:$SNAPCRAFT_STAGE/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
      - LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAPCRAFT_STAGE/lib:$SNAPCRAFT_STAGE/usr/lib:$SNAPCRAFT_STAGE/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAPCRAFT_STAGE/usr/lib/$SNAPCRAFT_ARCH_TRIPLET
    build-packages:
      - clang-tidy
      - libasound2-dev
      #- libavcodec-dev       # comes via the FFmpeg part
      #- libavdevice-dev      # comes via the FFmpeg part
      #- libavfilter-dev      # comes via the FFmpeg part
      #- libavformat-dev      # comes via the FFmpeg part
      #- libavutil-dev        # comes via the FFmpeg part
      - libcurl4-openssl-dev
      - libfdk-aac-dev
      - libfontconfig1-dev
      - libfreetype6-dev
      - libgl1-mesa-dev
      - libjack-dev           # not libjack-jackd2-dev as upstream suggests; snapd currently supports jack1
      - libjansson-dev
      - libluajit-5.1-dev
      - libmbedtls-dev
      - libpulse-dev
      - libqt5svg5-dev
      - libqt5x11extras5-dev
      - libsndio-dev
      - libspeexdsp-dev
      #- libswresample-dev    # comes via the FFmpeg part
      #- libswscale-dev       # comes via the FFmpeg part
      - libudev-dev
      - libv4l-dev
      - libvlc-dev
      - libvlccore-dev
      - libx11-dev
      - libx11-xcb-dev
      - libx264-dev
      - libxcb-randr0-dev
      - libxcb-shm0-dev
      - libxcb-xfixes0-dev
      - libxcb-xinerama0-dev
      - libxcb-xinput-dev
      - libxcb1-dev
      - libxcomposite-dev
      - libxinerama-dev
      - pkg-config
      - python3-dev
      - qtbase5-dev
      - re2c
      - swig
      # Required by StreamFX
      - ninja-build
      # Required by Advanced Scene Switcher
      - libxss-dev
      # Required to get patches
      - wget
    stage-packages:
      - libasound2
      #- libavcodec58         # comes via the FFmpeg part
      #- libavdevice58        # comes via the FFmpeg part
      #- libavfilter7         # comes via the FFmpeg part
      #- libavformat58        # comes via the FFmpeg part
      #- libavutil56          # comes via the FFmpeg part
      #- libavresample4       # comes via the FFmpeg part
      - libcurl4
      - libfdk-aac1
      - libfreetype6
      - libgl1
      - libglvnd0
      - jackd1                # not libjack-jackd2-0 as upstream suggests; snapd currently supports jack1
      - libjansson4
      - libluajit-5.1-2
      - libmbedtls12
      - libpulse0
      - libpython3.8
      - libqt5svg5
      - libqt5x11extras5
      - libqt5xml5
      - libsndio7.0
      - libspeexdsp1
      #- libswresample3       # comes via the FFmpeg part
      #- libswscale5          # comes via the FFmpeg part
      - libv4l-0
      - libv4l2rds0
      - libvlc5
      - libvlccore9
      - libx11-6
      - libx11-xcb1
      - libx264-155
      - libxcb-randr0
      - libxcb-shm0
      - libxcb-xfixes0
      - libxcb-xinerama0
      - libxcb-xinput0
      - libxcomposite1
      - libxinerama1
      # Required by Advanced Scene Switcher
      - libxss1

  # Required for DroidCam; if it's added as a user-installed plugin
  adb:
    plugin: nil
    stage-packages:
      - adb
      - libusbmuxd6

  # Required for VirtualCam; stage the minimum required binaries
  kmod:
    plugin: nil
    stage-packages:
      - kmod
    prime:
      - bin
      - sbin

  libcurl:
    plugin: nil
    stage-packages:
      - libcurl4
    override-prime: |
      # The Advanced Scene Switcher looks in hardcoded paths for libcurl.so.4
      # So, copy libcurl.so.4 to a location referenced by the snap layouts
      [ -d ${SNAPCRAFT_PRIME}/usr/local/lib ] || mkdir -p ${SNAPCRAFT_PRIME}/usr/local/lib
      cp ${SNAPCRAFT_STAGE}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/libcurl.so.4 ${SNAPCRAFT_PRIME}/usr/local/lib/

  libndi:
    plugin: nil
    source: http://514f211588de67e4fdcf-437b8dd50f60b69cf0974b538e50585b.r63.cf1.rackcdn.com/Utilities/SDK/NDI_SDK_Linux_v2/InstallNDISDK_v4_Linux.tar.gz
    source-checksum: "sha256/45621d7e70e73d5e6b8d07cc8d55a920fac979508de65db705eff7a188222e71"
    stage-packages:
      - libavahi-client3
    override-build: |
      yes | env PAGER=cat ./InstallNDISDK_v4_Linux.sh || true
      SDK="${SNAPCRAFT_PART_BUILD}/NDI SDK for Linux"
      install -D -m644 "${SDK}/include/"*.h -t "${SNAPCRAFT_PART_INSTALL}/usr/include"
      install -D -m755 "${SDK}/lib/${SNAPCRAFT_ARCH_TRIPLET}/libndi.so.4".*.* -t "${SNAPCRAFT_PART_INSTALL}/usr/local/lib/"
      cd "${SNAPCRAFT_PART_INSTALL}/usr/local/lib"
      ln -s "libndi.so.4".*.* "libndi.so.4"
      ln -s "libndi.so.4".*.*  libndi.so

  # Required by Input Overlay if it's added as a 3rd party plugin
  libuiohook:
    plugin: autotools
    source: https://github.com/kwhat/libuiohook.git
    source-tag: '1.0.3'
    autotools-configure-parameters:
      - --prefix=/usr
      - --disable-debug
      - --disable-static
      - --enable-quiet
    build-packages:
      - libxinerama-dev
      - libxt-dev
      - libxtst-dev
      - pkg-config
    stage-packages:
      - libxinerama1
      - libxt6
      - libxtst6
    stage:
      - -usr/lib/*.la

  # Required by Input Overlay if it's added as a 3rd party plugin
  netlib:
    plugin: cmake
    source: https://github.com/univrsal/netlib.git
    source-tag: 'v0.2'
    override-build: |
      cmake \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_C_FLAGS_RELEASE=-s \
        -DCMAKE_CXX_FLAGS_RELEASE=-s \
        ${SNAPCRAFT_PART_SRC}
      make -j $(nproc)
    organize:
      libnetlib.so: usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libnetlib.so
    prime:
      - usr/lib/*/libnetlib.so

  vlc-plugins:
    plugin: nil
    stage-packages:
      - freeglut3
      - libglu1-mesa
      - libslang2
      - vlc-plugin-base
    stage:
      - -usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libsrt.*         # Provided by the srt part
      - -usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libavcodec.*     # Provided by the ffmpeg part
      - -usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libavdevice.*    # Provided by the ffmpeg part
      - -usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libavfilter.*    # Provided by the ffmpeg part
      - -usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libavformat.*    # Provided by the ffmpeg part
      - -usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libavutil.*      # Provided by the ffmpeg part
      - -usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libpostproc.*    # Provided by the ffmpeg part
      - -usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libswresample.*  # Provided by the ffmpeg part
      - -usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libswscale.*     # Provided by the ffmpeg part
      - -usr/lib/$SNAPCRAFT_ARCH_TRIPLET/vlc/lua
      - -usr/share/vlc

  obs-audio-pan:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/norihiro/obs-audio-pan-filter.git
    source-tag: '0.1.0'
    override-build: |
      mkdir -p $SNAPCRAFT_PART_SRC/build
      cd $SNAPCRAFT_PART_SRC/build
      cmake \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_C_FLAGS_RELEASE=-s \
        -DCMAKE_CXX_FLAGS_RELEASE=-s \
        -DLIBOBS_INCLUDE_DIR=$SNAPCRAFT_STAGE/usr/include/obs/ \
        $SNAPCRAFT_PART_SRC
      make -j $(nproc)
      make install DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      usr/lib/$SNAPCRAFT_ARCH_TRIPLET/obs-plugins/obs-audio-pan-filter.so: usr/lib/obs-plugins/

  obs-dvd-screensaver:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/univrsal/dvds3.git
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DGLOBAL_INSTALLATION=TRUE
    override-pull: |
      snapcraftctl pull
      sed -i 's|VERSION 3\.17|VERSION 3\.16|' CMakeLists.txt

  obs-gphoto:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/adlerweb/obs-gphoto.git
    source-branch: 'adlerweb'
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DSYSTEM_INSTALL=TRUE
    build-packages:
      - libgphoto2-dev
      - libjpeg-turbo8-dev
      - libudev-dev
    stage-packages:
      - libgphoto2-6
      - libjpeg-turbo8
      - libudev1
      - libusb-1.0-0
    organize:
      root/stage/usr/lib/obs-plugins/obs-gphoto.so: usr/lib/obs-plugins/
    prime:
      - -root

  obs-gstreamer:
    plugin: meson
    after: [ obs ]
    source: https://github.com/fzwoch/obs-gstreamer.git
    source-tag: 'v0.2.0'
    meson-parameters:
      - --prefix=/usr
      - --buildtype=release
      - --strip
    build-packages:
      - libgstreamer1.0-dev
      - libgstreamer-plugins-base1.0-dev
      - ninja-build
    stage-packages:
      - gstreamer1.0-plugins-base
    organize:
      usr/lib/$SNAPCRAFT_ARCH_TRIPLET/obs-plugins/obs-gstreamer.so: usr/lib/obs-plugins/

  obs-ndi:
    plugin: cmake
    after:
      - libndi
      - obs
    source: https://github.com/Palakis/obs-ndi.git
    source-tag: '4.9.1'
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DLIBOBS_INCLUDE_DIR=$SNAPCRAFT_STAGE/usr/include/obs/
      - -DUSE_UBUNTU_FIX=TRUE
    prime:
      - -usr/lib/$SNAPCRAFT_ARCH_TRIPLET/obs-plugins/obs-ndi.so

  obs-rgb-levels:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/petrifiedpenguin/obs-rgb-levels-filter.git
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DLIBOBS_INCLUDE_DIR=$SNAPCRAFT_STAGE/usr/include/obs/
      - -DLIBOBS_LIB=$SNAPCRAFT_STAGE/usr/lib/

  obs-spectralizer:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/univrsal/spectralizer.git
    source-tag: 'v1.3.4'
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DLIBOBS_INCLUDE_DIR=$SNAPCRAFT_STAGE/usr/include/obs/
      - -DGLOBAL_INSTALLATION=TRUE
    build-packages:
      - libfftw3-dev
    stage-packages:
      - libfftw3-3

  obs-text-pango:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/kkartaltepe/obs-text-pango.git
    source-tag: 'v1.0'
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DOBS_INCLUDE_DIRS=$SNAPCRAFT_STAGE/usr/include/obs/
      - -DOBS_LIBRARIES=$SNAPCRAFT_STAGE/usr/lib/
    build-packages:
      - libpango1.0-dev
    stage-packages:
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libpangoft2-1.0-0
    organize:
      usr/data/obs-plugins/text-pango/locale/*.ini: usr/share/obs/obs-plugins/text-pango/locale/
      usr/obs-plugins/*bit/libtext-pango.so: usr/lib/obs-plugins/
    prime:
      - usr/share
      - usr/lib

  obs-vnc:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/norihiro/obs-vnc.git
    source-tag: '0.2.2'
    build-packages:
      - libvncserver-dev
    stage-packages:
      - libvncclient1
    override-build: |
      mkdir -p $SNAPCRAFT_PART_SRC/build
      cd $SNAPCRAFT_PART_SRC/build
      cmake \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_C_FLAGS_RELEASE=-s \
        -DCMAKE_CXX_FLAGS_RELEASE=-s \
        -DLIBOBS_INCLUDE_DIR=$SNAPCRAFT_STAGE/usr/include/obs/ \
        $SNAPCRAFT_PART_SRC
      make -j $(nproc)
      make install DESTDIR=$SNAPCRAFT_PART_INSTALL
    organize:
      usr/lib/$SNAPCRAFT_ARCH_TRIPLET/obs-plugins/obs-vnc.so: usr/lib/obs-plugins/

  obs-websocket:
    plugin: cmake
    after: [ obs ]
    source: https://github.com/Palakis/obs-websocket.git
    source-branch: '4.9.0'
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DLIBOBS_INCLUDE_DIR=$SNAPCRAFT_STAGE/usr/include/obs/
      - -DUSE_UBUNTU_FIX=TRUE
    prime:
      - -usr/lib/$SNAPCRAFT_ARCH_TRIPLET/obs-plugins

  # Adds 3rd party OBS scripts to the snap
  obs-scripts:
    plugin: dump
    source: snap/local/
    stage-packages:
      - python3-lxml
    organize:
      youtubelink.py: usr/share/obs/obs-plugins/frontend-tools/scripts/

  obs-wrapper:
    plugin: dump
    after:
      - obs-audio-pan
      - obs-dvd-screensaver
      - obs-gphoto
      - obs-gstreamer
      - obs-ndi
      - obs-rgb-levels
      - obs-text-pango
      - obs-scripts
      - obs-spectralizer
      - obs-vnc
      - obs-websocket
    source: snap/local/
    stage-packages:
      - mesa-utils
      - mesa-utils-extra
      - vainfo
      - vdpauinfo
    organize:
      obs-wrapper: bin/

  cleanup:
    plugin: nil
    after:
      - adb
      - cef
      - desktop-qt5
      - ffmpeg
      - kmod
      - libcurl
      - libuiohook
      - netlib
      - obs-wrapper
      - rnnoise
      - vlc-plugins
    override-prime: |
      for CRUFT in CEF usr/include usr/share/apport usr/share/bug usr/share/fonts usr/share/lintian usr/share/man usr/share/pkgconfig; do
        rm -rf ${SNAPCRAFT_PRIME}/${CRUFT}
      done
      find ${SNAPCRAFT_PRIME}/usr/share/doc/ -type f -not -name 'copyright' -delete || true
      rm ${SNAPCRAFT_PRIME}/usr/share/doc/*/*.gz 2>/dev/null || true
      rm -rf ${SNAPCRAFT_PRIME}/usr/share/doc/*/examples || true
      rm ${SNAPCRAFT_PRIME}/usr/share/doc/*/README* 2>/dev/null || true
      find ${SNAPCRAFT_PRIME}/usr -type d -empty -delete || true
